C51 COMPILER V9.60.0.0   MAIN                                                              11/13/2020 20:45:31 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN MAIN.OBJ
COMPILER INVOKED BY: E:\software\keil\C51\BIN\C51.EXE MAIN.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**********************RC522ÊµÑé¿ª·¢°åÀý³Ì************************
   2          *  CPU:STC89C52RC
   3          *  ¾§Õñ:11.0592MHZ
   4          ------------------------------------------------*/
   5          #include <reg52.h>
   6          #include  <STDIO.H>
   7          #include <string.h>
   8          #include "main.h"
   9          #include "mfrc522.h"
  10          
  11          unsigned char code data1[16] = {0x12,0x34,0x56,0x78,0xED,0xCB,0xA9,0x87,0x12,0x34,0x56,0x78,0x01,0xFE,0x01
             -,0xFE};
  12          //M1¿¨µÄÄ³Ò»¿éÐ´ÎªÈçÏÂ¸ñÊ½£¬Ôò¸Ã¿éÎªÇ®°ü£¬¿É½ÓÊÕ¿Û¿îºÍ³äÖµÃüÁî
  13          //4×Ö½Ú½ð¶î£¨µÍ×Ö½ÚÔÚÇ°£©£«4×Ö½Ú½ð¶îÈ¡·´£«4×Ö½Ú½ð¶î£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ·È¡·´£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ
             -·È¡·´ 
  14          unsigned char code data2[4]  = {0,0,0,0x01};
  15          unsigned char code DefaultKey[6] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; 
  16          
  17          
  18          unsigned char g_ucTempbuf[20];                        
  19          void delay1(unsigned int z)
  20          {
  21   1        unsigned int x,y;
  22   1        for(x=z;x>0;x--)
  23   1        for(y=110;y>0;y--); 
  24   1      }  
  25          
  26          
  27          void main( )
  28          {    
  29   1           unsigned char status,i;
  30   1           unsigned int temp;
  31   1           InitializeSystem( );
  32   1           PcdReset();
  33   1           PcdAntennaOff(); 
  34   1           PcdAntennaOn(); 
  35   1           while ( 1 )
  36   1           {   
  37   2      
  38   2              
  39   2               status = PcdRequest(PICC_REQALL, g_ucTempbuf);//Ñ°¿¨
  40   2               if (status != MI_OK)
  41   2               {    
  42   3                    InitializeSystem( );
  43   3           PcdReset();
  44   3           PcdAntennaOff(); 
  45   3           PcdAntennaOn(); 
  46   3              continue;
  47   3               }
  48   2                 
  49   2            printf("¿¨µÄÀàÐÍ:");
  50   2                  for(i=0;i<2;i++)
  51   2                {
  52   3                  temp=g_ucTempbuf[i];
  53   3                  printf("%X",temp);
C51 COMPILER V9.60.0.0   MAIN                                                              11/13/2020 20:45:31 PAGE 2   

  54   3                  
  55   3                }
  56   2            
  57   2               status = PcdAnticoll(g_ucTempbuf);//·À³å×²
  58   2               if (status != MI_OK)
  59   2               {    continue;    }
  60   2      
  61   2               
  62   2                ////////ÒÔÏÂÎª³¬¼¶ÖÕ¶Ë´òÓ¡³öµÄÄÚÈÝ////////////////////////
  63   2              
  64   2                printf("¿¨ÐòÁÐºÅ£º"); //³¬¼¶ÖÕ¶ËÏÔÊ¾,
  65   2                for(i=0;i<4;i++)
  66   2                {
  67   3                  temp=g_ucTempbuf[i];
  68   3                  printf("%X",temp);
  69   3                  
  70   3                }
  71   2      
  72   2                ///////////////////////////////////////////////////////////
  73   2      
  74   2               status = PcdSelect(g_ucTempbuf);//Ñ¡¶¨¿¨Æ¬
  75   2               if (status != MI_OK)
  76   2               {    continue;    }
  77   2               
  78   2               status = PcdAuthState(PICC_AUTHENT1A, 1, DefaultKey, g_ucTempbuf);//ÑéÖ¤¿¨Æ¬ÃÜÂë
  79   2               if (status != MI_OK)
  80   2               {    continue;    }
  81   2               
  82   2               status = PcdWrite(1, data1);//Ð´¿é
  83   2               if (status != MI_OK)
  84   2               {    continue;    }
  85   2      while(1)
  86   2          {
  87   3               status = PcdRequest(PICC_REQALL, g_ucTempbuf);//Ñ°¿¨
  88   3               if (status != MI_OK)
  89   3               {   
  90   4           InitializeSystem( );
  91   4           PcdReset();
  92   4           PcdAntennaOff(); 
  93   4           PcdAntennaOn(); 
  94   4              continue;
  95   4               }
  96   3           status = PcdAnticoll(g_ucTempbuf);//·À³å×²
  97   3               if (status != MI_OK)
  98   3               {    continue;    }
  99   3          status = PcdSelect(g_ucTempbuf);//Ñ¡¶¨¿¨Æ¬
 100   3               if (status != MI_OK)
 101   3               {    continue;    }
 102   3               
 103   3               status = PcdAuthState(PICC_AUTHENT1A, 1, DefaultKey, g_ucTempbuf);//ÑéÖ¤¿¨Æ¬ÃÜÂë
 104   3               if (status != MI_OK)
 105   3               {    continue;    }
 106   3      
 107   3      
 108   3               status = PcdValue(PICC_DECREMENT,1,data2);//¿Û¿î
 109   3               if (status != MI_OK)
 110   3               {    continue;    }
 111   3           
 112   3               status = PcdBakValue(1, 2);//¿é±¸·Ý
 113   3               if (status != MI_OK)
 114   3               {    continue;    }
 115   3               
C51 COMPILER V9.60.0.0   MAIN                                                              11/13/2020 20:45:31 PAGE 3   

 116   3               status = PcdRead(2, g_ucTempbuf);//¶Á¿é
 117   3               if (status != MI_OK)
 118   3               {    continue;    }
 119   3                printf("¿¨¶Á¿é£º"); //³¬¼¶ÖÕ¶ËÏÔÊ¾,
 120   3               for(i=0;i<16;i++)
 121   3                {
 122   4                  temp=g_ucTempbuf[i];
 123   4                  printf("%X",temp);
 124   4                  
 125   4                }
 126   3      
 127   3           printf("\n");
 128   3          LED_GREEN = 0;
 129   3      //      for(i=0;i<250;i++)//ÏÈÊä³öÒ»ÖÖÆµÂÊµÄÉùÒô
 130   3      //        {
 131   3      //         for(j=0;j<80;j++);
 132   3      //         Speaker=~Speaker;
 133   3      //       }
 134   3          delay1(100);
 135   3          LED_GREEN = 1;
 136   3          delay1(100);
 137   3          LED_GREEN = 0;
 138   3          delay1(200);
 139   3          LED_GREEN = 1;                     
 140   3           PcdHalt();
 141   3          }
 142   2          }
 143   1      }
 144          
 145          
 146          /////////////////////////////////////////////////////////////////////
 147          //ÏµÍ³³õÊ¼»¯
 148          /////////////////////////////////////////////////////////////////////
 149          void InitializeSystem()
 150          {
 151   1      /*  P0M1 = 0x0; P0M2 = 0x0;
 152   1        P1M1 = 0x0; P1M2 = 0x0;                      
 153   1        P3M1 = 0x0; P3M2 = 0xFF; 
 154   1      */  P0 = 0xFF; P1 = 0xFF; P3 = 0xFF;P2 = 0xFF;
 155   1      
 156   1        TMOD=0x21;       //ÉèT0Îª·½Ê½1£¬GATE=1£»
 157   1        SCON=0x50;
 158   1        TH1=0xFD;          //²¨ÌØÂÊÎª2400bps
 159   1        TL1=0xFD;
 160   1        TH0=0;
 161   1        TL0=0; 
 162   1        TR0=1;  
 163   1        ET0=1;             //ÔÊÐíT0ÖÐ¶Ï
 164   1        TR1=1;         //¿ªÆô¶¨Ê±Æ÷
 165   1        TI=1;
 166   1        EA=1;         //¿ªÆô×ÜÖÐ¶Ï
 167   1        
 168   1        ES = 1;
 169   1        RI = 1;
 170   1      
 171   1       
 172   1      }
 173          
 174          
 175          
 176             
 177            
C51 COMPILER V9.60.0.0   MAIN                                                              11/13/2020 20:45:31 PAGE 4   

 178          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    513    ----
   CONSTANT SIZE    =     61    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
