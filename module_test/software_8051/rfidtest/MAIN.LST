C51 COMPILER V9.60.0.0   MAIN                                                              11/13/2020 21:13:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN MAIN.OBJ
COMPILER INVOKED BY: E:\software\keil\C51\BIN\C51.EXE MAIN.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**********************RC522ÊµÑé¿ª·¢°åÀý³Ì************************
   2          *  CPU:STC89C52RC
   3          *  ¾§Õñ:11.0592MHZ
   4          ------------------------------------------------*/
   5          #include <reg52.h>
   6          #include <STDIO.H>
   7          #include <string.h>
   8          #include "main.h"
   9          #include "mfrc522.h"
  10          
  11          #define aimAddr = 0x3c;
  12          #define aimAddrOpp = 0xc3;
  13          
  14          unsigned char code data1[16] = {0x12, 0x34, 0x56, 0x78, 0xED, 0xCB, 0xA9, 0x87, 0x12, 0x34, 0x56, 0x78, 0x
             -3c, 0xc3, 0x3c, 0xc3};
  15          //M1¿¨µÄÄ³Ò»¿éÐ´ÎªÈçÏÂ¸ñÊ½£¬Ôò¸Ã¿éÎªÇ®°ü£¬¿É½ÓÊÕ¿Û¿îºÍ³äÖµÃüÁî
  16          //4×Ö½Ú½ð¶î£¨µÍ×Ö½ÚÔÚÇ°£©£«4×Ö½Ú½ð¶îÈ¡·´£«4×Ö½Ú½ð¶î£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ·È¡·´£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ
             -·È¡·´
  17          unsigned char code data2[4] = {0, 0, 0, 0x01};
  18          unsigned char code DefaultKey[6] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
  19          
  20          unsigned char g_ucTempbuf[20];
  21          void delay1(unsigned int z)
  22          {
  23   1          unsigned int x, y;
  24   1          for (x = z; x > 0; x--)
  25   1              for (y = 110; y > 0; y--)
  26   1                  ;
  27   1      }
  28          
  29          void main()
  30          {
  31   1          unsigned char status, i;
  32   1          unsigned int temp;
  33   1          InitializeSystem();
  34   1          PcdReset();
  35   1          PcdAntennaOff();
  36   1          PcdAntennaOn();
  37   1          while (1)
  38   1          {
  39   2      
  40   2              status = PcdRequest(PICC_REQALL, g_ucTempbuf); //Ñ°¿¨
  41   2              if (status != MI_OK) //initial
  42   2              {
  43   3                  InitializeSystem();
  44   3                  PcdReset();
  45   3                  PcdAntennaOff();
  46   3                  PcdAntennaOn();
  47   3                  continue;
  48   3              }
  49   2      
  50   2              printf("¿¨µÄÀàÐÍ:");
  51   2              for (i = 0; i < 2; i++)
  52   2              {
  53   3                  temp = g_ucTempbuf[i];
C51 COMPILER V9.60.0.0   MAIN                                                              11/13/2020 21:13:19 PAGE 2   

  54   3                  printf("%X", temp);
  55   3              }
  56   2      
  57   2              status = PcdAnticoll(g_ucTempbuf); //·À³å×²
  58   2              if (status != MI_OK)
  59   2              {
  60   3                  continue;
  61   3              }
  62   2      
  63   2              ////////ÒÔÏÂÎª³¬¼¶ÖÕ¶Ë´òÓ¡³öµÄÄÚÈÝ////////////////////////
  64   2      
  65   2              printf("¿¨ÐòÁÐºÅ£º"); //³¬¼¶ÖÕ¶ËÏÔÊ¾,
  66   2              for (i = 0; i < 4; i++)
  67   2              {
  68   3                  temp = g_ucTempbuf[i];
  69   3                  printf("%X", temp);
  70   3              }
  71   2      
  72   2              ///////////////////////////////////////////////////////////
  73   2      
  74   2              status = PcdSelect(g_ucTempbuf); //Ñ¡¶¨¿¨Æ¬
  75   2              if (status != MI_OK)
  76   2              {
  77   3                  continue;
  78   3              }
  79   2      
  80   2              status = PcdAuthState(PICC_AUTHENT1A, 60, DefaultKey, g_ucTempbuf); //ÑéÖ¤¿¨Æ¬ÃÜÂë
  81   2              if (status != MI_OK)
  82   2              {
  83   3                  continue;
  84   3              }
  85   2      
  86   2              status = PcdWrite(60, data1); //Ð´¿é
  87   2              if (status != MI_OK)
  88   2              {
  89   3                  continue;
  90   3              }
  91   2              while (1)
  92   2              {
  93   3                  status = PcdRequest(PICC_REQALL, g_ucTempbuf); //Ñ°¿¨
  94   3                  if (status != MI_OK)
  95   3                  {
  96   4                      InitializeSystem();
  97   4                      PcdReset();
  98   4                      PcdAntennaOff();
  99   4                      PcdAntennaOn();
 100   4                      continue;
 101   4                  }
 102   3                  status = PcdAnticoll(g_ucTempbuf); //·À³å×²
 103   3                  if (status != MI_OK)
 104   3                  {
 105   4                      continue;
 106   4                  }
 107   3                  status = PcdSelect(g_ucTempbuf); //Ñ¡¶¨¿¨Æ¬
 108   3                  if (status != MI_OK)
 109   3                  {
 110   4                      continue;
 111   4                  }
 112   3      
 113   3                  status = PcdAuthState(PICC_AUTHENT1A, 60, DefaultKey, g_ucTempbuf); //ÑéÖ¤¿¨Æ¬ÃÜÂë
 114   3                  if (status != MI_OK)
 115   3                  {
C51 COMPILER V9.60.0.0   MAIN                                                              11/13/2020 21:13:19 PAGE 3   

 116   4                      continue;
 117   4                  }
 118   3      
 119   3                  status = PcdValue(PICC_DECREMENT, 60, data2); //¿Û¿î
 120   3                  if (status != MI_OK)
 121   3                  {
 122   4                      continue;
 123   4                  }
 124   3      
 125   3                  status = PcdBakValue(60, 61); //¿é±¸·Ý
 126   3                  if (status != MI_OK)
 127   3                  {
 128   4                      continue;
 129   4                  }
 130   3      
 131   3                  status = PcdRead(61, g_ucTempbuf); //¶Á¿é
 132   3                  if (status != MI_OK)
 133   3                  {
 134   4                      continue;
 135   4                  }
 136   3                  printf("¿¨¶Á¿é£º"); //³¬¼¶ÖÕ¶ËÏÔÊ¾,
 137   3                  for (i = 0; i < 16; i++)
 138   3                  {
 139   4                      temp = g_ucTempbuf[i];
 140   4                      printf("%X", temp);
 141   4                  }
 142   3      
 143   3                  printf("\n");
 144   3                  LED_GREEN = 0;
 145   3                  //      for(i=0;i<250;i++)//ÏÈÊä³öÒ»ÖÖÆµÂÊµÄÉùÒô
 146   3                  //        {
 147   3                  //         for(j=0;j<80;j++);
 148   3                  //         Speaker=~Speaker;
 149   3                  //       }
 150   3                  delay1(100);
 151   3                  LED_GREEN = 1;
 152   3                  delay1(100);
 153   3                  LED_GREEN = 0;
 154   3                  delay1(200);
 155   3                  LED_GREEN = 1;
 156   3                  PcdHalt();
 157   3              }
 158   2          }
 159   1      }
 160          
 161          /////////////////////////////////////////////////////////////////////
 162          //ÏµÍ³³õÊ¼»¯
 163          /////////////////////////////////////////////////////////////////////
 164          void InitializeSystem()
 165          {
 166   1          /*  P0M1 = 0x0; P0M2 = 0x0;
 167   1        P1M1 = 0x0; P1M2 = 0x0;                      
 168   1        P3M1 = 0x0; P3M2 = 0xFF; 
 169   1      */
 170   1          P0 = 0xFF;
 171   1          P1 = 0xFF;
 172   1          P3 = 0xFF;
 173   1          P2 = 0xFF;
 174   1      
 175   1          TMOD = 0x21; //ÉèT0Îª·½Ê½1£¬GATE=1£»
 176   1          SCON = 0x50;
 177   1          TH1 = 0xFD; //²¨ÌØÂÊÎª2400bps
C51 COMPILER V9.60.0.0   MAIN                                                              11/13/2020 21:13:19 PAGE 4   

 178   1          TL1 = 0xFD;
 179   1          TH0 = 0;
 180   1          TL0 = 0;
 181   1          TR0 = 1;
 182   1          ET0 = 1; //ÔÊÐíT0ÖÐ¶Ï
 183   1          TR1 = 1; //¿ªÆô¶¨Ê±Æ÷
 184   1          TI = 1;
 185   1          EA = 1; //¿ªÆô×ÜÖÐ¶Ï
 186   1      
 187   1          ES = 1;
 188   1          RI = 1;
 189   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    513    ----
   CONSTANT SIZE    =     61    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
